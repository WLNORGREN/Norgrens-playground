
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu May 25 18:22:54 2023

@author: wln
"""

import pyfirmata
from pyfirmata import util

import tkinter as tk
import time

pin= 0
port = '/dev/ttyACM0'
board = pyfirmata.Arduino(port)
scheduled_events = []  # List to store event IDs

def on():
    
    board.digital[pin].write(1)

def off():
    board.digital[pin].write(0)

def cancel():
    if root._job is not None:
        root.after_cancel(root._job)
        root._job = None
        
        
        
#CONVERSION NOTE  2^12 represents the 12 bits comprising the raw temperature value.  The fraction represents a conversion factor of 1/128        

def update_text():
    it = util.Iterator(board)
    it.start()
    board.analog[pin].enable_reporting()
    value_label.config(text=str(board.analog[pin].read()))
    try: 
        print(board.analog[pin].read()*(2**12)*0.0078125)
    except:
        print(None)
  
    event_id =  root.after(1000,update_text)
    scheduled_events.append(event_id) 
def toggle_button():
  
    if toggle_btn.config('text')[-1] == 'On':
        toggle_btn.config(text='Off')
        status_label.config(text="Reading")
        update_text()
    else: 
        for event_id in scheduled_events:
            root.after_cancel(event_id)  # Cancel each scheduled event
        scheduled_events.clear()  # Clear the list of event IDs

        toggle_btn.config(text='On')
        value_label.config(text='0.0')
        status_label.config(text="Press button to collect data")

root = tk.Tk()
root.title("Toggle Button Example")

# Create a variable to store the state of the toggle button
button_var = tk.BooleanVar(value=True)


# Create the status label
status_label = tk.Label(root, text="Press button to collect data")
# Create the floating point value label
value_label = tk.Label(root, text="0.0")

# Create the toggle button
toggle_btn = tk.Button(root, text="On", command=toggle_button)

toggle_btn.pack()


status_label.pack()

value_label.pack()

root.mainloop()